<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  
  

  


  <head>
    <title>
      #23273 (MigrationRecorder does not obey db_router allow_migrate rules)
     – Django
    </title>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <!--[if IE]><script type="text/javascript">
      if (/^#__msie303:/.test(window.location.hash))
        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));
    </script><![endif]-->
        <link rel="search" href="/search" />
        <link rel="prev" href="/ticket/23272" title="Ticket #23272" />
        <link rel="last" href="/ticket/26358" title="Ticket #26358" />
        <link rel="help" href="/wiki/TracGuide" />
        <link rel="alternate" href="/ticket/23273?format=csv" type="text/csv" class="csv" title="Comma-delimited Text" /><link rel="alternate" href="/ticket/23273?format=tab" type="text/tab-separated-values" class="tab" title="Tab-delimited Text" /><link rel="alternate" href="/ticket/23273?format=rss" type="application/rss+xml" class="rss" title="RSS Feed" />
        <link rel="next" href="/ticket/23274" title="Ticket #23274" />
        <link rel="start" href="/wiki" />
        <link rel="stylesheet" href="/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/chrome/common/css/ticket.css" type="text/css" />
        <link rel="first" href="/ticket/1" title="Ticket #1" />
        <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
        <link rel="icon" href="/favicon.ico" type="image/x-icon" />
    <style id="trac-noscript" type="text/css">.trac-noscript { display: none !important }</style>
      <link type="application/opensearchdescription+xml" rel="search" href="/search/opensearch" title="Search Django" />
    <script type="text/javascript">
      var auto_preview_timeout=2.0;
      var form_token="c194439d9bc0beebf8673bad";
      var comments_prefs={"comments_only":"false","comments_order":"oldest"};
    </script>
      <script type="text/javascript" charset="utf-8" src="/chrome/common/js/jquery.js"></script>
      <script type="text/javascript" charset="utf-8" src="/chrome/common/js/babel.js"></script>
      <script type="text/javascript" charset="utf-8" src="/chrome/common/js/trac.js"></script>
      <script type="text/javascript" charset="utf-8" src="/chrome/common/js/search.js"></script>
      <script type="text/javascript" charset="utf-8" src="/chrome/common/js/folding.js"></script>
      <script type="text/javascript" charset="utf-8" src="/chrome/common/js/wikitoolbar.js"></script>
      <script type="text/javascript" charset="utf-8" src="/chrome/common/js/resizer.js"></script>
      <script type="text/javascript" charset="utf-8" src="/chrome/common/js/auto_preview.js"></script>
    <script type="text/javascript">
      jQuery("#trac-noscript").remove();
      jQuery(document).ready(function($) {
        $(".trac-autofocus").focus();
        $(".trac-target-new").attr("target", "_blank");
        setTimeout(function() { $(".trac-scroll").scrollToTop() }, 1);
        $(".trac-disable-on-submit").disableOnSubmit();
      });
    </script>
    <script type="text/javascript" src="/chrome/common/js/threaded_comments.js"></script>
    <script type="text/javascript">
      jQuery(document).ready(function($) {
        $("div.description").find("h1,h2,h3,h4,h5,h6").addAnchor(_("Link to this section"));
        $(".foldable").enableFolding(false, true);
      /*<![CDATA[*/
        $("#attachments").toggleClass("collapsed");
        $("#trac-up-attachments").click(function () {
          $("#attachments").removeClass("collapsed");
          return true;
        });
        $("#modify").parent().toggleClass("collapsed");
        $(".trac-topnav a").click(function() { $("#modify").parent().removeClass("collapsed"); });
        /* only enable control elements for the currently selected action */
        var actions = $("#action input[name='action']");
        function updateActionFields() {
          actions.each(function () {
            $(this).siblings().find("*[id]").enable($(this).checked());
            $(this).siblings().filter("*[id]").enable($(this).checked());
          });
        }
        actions.click(updateActionFields);
        updateActionFields();
        function setRevertHandler() {
          $("button.trac-revert").click(function() {
            var div = $("div", this);
            var field_name = div[0].id.substr(7);
            var field_value = div.text();
            var input = $("#propertyform *[name=field_" + field_name + "]");
            if (input.length > 0) {
              if (input.filter("input[type=radio]").length > 0) {
                input.val([field_value]);
              } else if (input.filter("input[type=checkbox]").length > 0) {
                input.val(field_value == "1" ? [field_value] : []);
              } else {
                input.val(field_value);
              }
            } else { // Special case for CC checkbox
              input = $("#propertyform input[name=cc_update]").val([]);
            }
            input.change();
            $(this).closest("li").remove();
            return false;
          });
        }
        setRevertHandler();
        var comment_focused = false;
        $("#comment").focus(function() { comment_focused = true; })
                     .blur(function() { comment_focused = false; });
        $("#propertyform").autoSubmit({preview: '1'}, function(data, reply) {
          var items = $(reply);
          // Update ticket box
          $("#ticket").replaceWith(items.filter('#ticket'));
          // Unthread, unrevert and update changelog
          if (!$('#trac-comments-oldest').checked())
            $('#trac-comments-oldest').click().change();
          $("#changelog").replaceWith(items.filter("#changelog"));
          if ($('#trac-comments-only-toggle').attr('checked'))
            $('#trac-comments-only-toggle').click().attr('checked', true);
          // Show warning
          var new_changes = $("#changelog .trac-new");
          $("#trac-edit-warning").toggle(new_changes.length != 0);
          if (new_changes.length != 0)
            $("#changelog").parent().show().removeClass("collapsed");
          // Update view time
          $("#propertyform input[name='view_time']").replaceWith(items.filter("input[name='view_time']"));
          // Update preview
          var preview = $("#ticketchange").html(items.filter('#preview').children());
          var show_preview = preview.children().length != 0;
          $("#ticketchange").toggle(show_preview);
          setRevertHandler();
          // Collapse property form if comment editor has focus
          if (show_preview && comment_focused)
            $("#modify").parent().addClass("collapsed");
          // Execute scripts to load stylesheets
          items.filter("script").appendTo("head");
        }, "#ticketchange .trac-loading");
        $("#trac-comment-editor").autoSubmit({preview_comment: '1'}, function(data, reply) {
          var comment = $("#trac-comment-editor").next("div.comment").html(reply);
          comment.toggle(comment.children().length != 0);
        }, "#changelog .trac-loading");
        /*]]>*/
      });
    </script>
    <!--[if lte IE 8]>
        <link rel="stylesheet" href="${href.chrome('site/css/output-ie.css')}" />
     <![endif]-->
    <!--[if gt IE 8]><!-->
        <link rel="stylesheet" href="/chrome/site/css/output.css" />
    <!--<![endif]-->
    <link rel="stylesheet" href="/chrome/site/css/trachacks.css" />
    <script src="//ajax.googleapis.com/ajax/libs/webfont/1.5.6/webfont.js"></script>
    <script>
    WebFont.load({
        google: {
            families: ['Inconsolata:400,700:latin', 'Roboto:400italic,700italic,300,700,400:latin']
        }
    });
    </script>
    <script src="/chrome/site/js/lib/modernizr.js"></script>
      <script type="text/javascript" src="/chrome/site/tickethacks.js"></script>
  </head>
  <body id="generic">
    <div role="banner" id="top">
      <div class="container">
        <a class="logo" href="https://www.djangoproject.com/">Django</a>
        <p class="meta">The web framework for perfectionists with deadlines.</p>
        <nav role="navigation">
          <ul>
            <li><a href="https://www.djangoproject.com/">Overview</a></li>
            <li><a href="https://www.djangoproject.com/download/">Download</a></li>
            <li><a href="https://docs.djangoproject.com/">Documentation</a></li>
            <li><a href="https://www.djangoproject.com/weblog/">News</a></li>
            <li><a href="https://www.djangoproject.com/community/">Community</a></li>
            <li class="active"><a href="/">Code</a></li>
            <li><a href="https://www.djangoproject.com/foundation/">About</a></li>
            <li><a href="https://www.djangoproject.com/fundraising/">♥ Donate</a></li>
          </ul>
        </nav>
      </div>
    </div>
    <div class="copy-banner">
      <div class="container">
        <h1>Code</h1>
      </div>
    </div>
      <div class="container full-width">
        <div role="main">
          <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/github/login">GitHub Login</a></li><li><a href="/login">DjangoProject Login</a></li><li><a href="/prefs">Preferences</a></li><li class="last"><a href="/rpc">API</a></li>
    </ul>
  </div>
          <div id="mainnav" class="nav">
    <ul>
      <li class="first active"><a href="/query">View Tickets</a></li><li><a href="/wiki/Reports">Reports</a></li><li><a href="/timeline">Timeline</a></li><li><a href="/wiki">Wiki</a></li><li class="last"><a href="/search">Search</a></li>
    </ul>
  </div>
          <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
        <ul>
          <li class="first"><span>&larr; <a class="prev" href="/ticket/23272" title="Ticket #23272">Previous Ticket</a></span></li><li class="last"><span><a class="next" href="/ticket/23274" title="Ticket #23274">Next Ticket</a> &rarr;</span></li>
        </ul>
        <hr />
      </div>
    <div id="content" class="ticket">
        <div id="ticket" class="trac-content ">
  <div class="date">
    <p>Opened <a class="timeline" href="/timeline?from=2014-08-11T22%3A59%3A35-05%3A00&amp;precision=second" title="See timeline at 08/11/14 22:59:35">19 months ago</a></p>
    <p>Last modified <a class="timeline" href="/timeline?from=2016-02-11T06%3A30%3A14-06%3A00&amp;precision=second" title="See timeline at 02/11/16 06:30:14">5 weeks ago</a></p>
  </div>
  <h2>
    <a href="/ticket/23273" class="trac-id">#23273</a>
    <span class="trac-status">
      <a href="/query?status=new">new</a>
    </span>
    <span class="trac-type">
      <a href="/query?status=!closed&amp;type=Bug">Bug</a>
    </span>
  </h2>
  <h1 id="trac-ticket-title" class="searchable">
    <span class="summary">MigrationRecorder does not obey db_router allow_migrate rules</span>
  </h1>
  <table class="properties">
    <tr>
      <th id="h_reporter">Reported by:</th>
      <td headers="h_reporter" class="searchable"><a href="/query?status=!closed&amp;reporter=froomzy">froomzy</a></td>
      <th id="h_owner">Owned by:</th>
      <td headers="h_owner"><a href="/query?status=!closed&amp;owner=nobody">nobody</a></td>
    </tr>
    <tr>
        <th id="h_component">
          Component:
        </th>
        <td headers="h_component">
              <a href="/query?status=!closed&amp;component=Migrations">Migrations</a>
        </td>
        <th id="h_version">
          Version:
        </th>
        <td headers="h_version">
              <a href="/query?status=!closed&amp;version=master">master</a>
        </td>
    </tr><tr>
        <th id="h_severity">
          Severity:
        </th>
        <td headers="h_severity">
              <a href="/query?status=!closed&amp;severity=Normal">Normal</a>
        </td>
        <th id="h_keywords" class="missing">
          Keywords:
        </th>
        <td headers="h_keywords" class="searchable">
        </td>
    </tr><tr>
        <th id="h_cc">
          Cc:
        </th>
        <td headers="h_cc" class="searchable">
              k@…
        </td>
        <th id="h_stage">
          Triage Stage:
        </th>
        <td headers="h_stage">
              <a href="/query?status=!closed&amp;stage=Accepted">Accepted</a>
        </td>
    </tr><tr>
        <th id="h_has_patch">
          Has patch:
        </th>
        <td headers="h_has_patch">
              <a href="/query?status=!closed&amp;has_patch=0">no</a>
        </td>
        <th id="h_needs_docs">
          Needs documentation:
        </th>
        <td headers="h_needs_docs">
              <a href="/query?status=!closed&amp;needs_docs=0">no</a>
        </td>
    </tr><tr>
        <th id="h_needs_tests">
          Needs tests:
        </th>
        <td headers="h_needs_tests">
              <a href="/query?status=!closed&amp;needs_tests=0">no</a>
        </td>
        <th id="h_needs_better_patch">
          Patch needs improvement:
        </th>
        <td headers="h_needs_better_patch">
              <a href="/query?status=!closed&amp;needs_better_patch=0">no</a>
        </td>
    </tr><tr>
        <th id="h_easy">
          Easy pickings:
        </th>
        <td headers="h_easy">
              <a href="/query?status=!closed&amp;easy=0">no</a>
        </td>
        <th id="h_ui_ux">
          UI/UX:
        </th>
        <td headers="h_ui_ux">
              <a href="/query?status=!closed&amp;ui_ux=0">no</a>
        </td>
    </tr>
  </table>
  <div class="description">
    <h3 id="comment:description">
      Description
    </h3>
    <div class="searchable">
      <p>
Hi,<br />
</p>
<p>
We have a multi-db setup. We have one connection that is for the django project, and several connections that talk to other dbs for information (ie models with managed = False). Django should only create tables in the first connection, never in any of the other connections. We have a simple router that does the following: <br />
</p>
<pre class="wiki">class Router(object):

    def allow_migrate(self, db, model):
        if db == 'default':
            return True
        return False
</pre><p>
<strong>Current Behaviour</strong><br />
</p>
<ul><li>We run our functional tests and the migrate command is called against each connection when the test databases are created (see django/test/runner.py, setup_databases, line 300-ish, which calls django/db/backends/creation.py, create_test_db, line 377-ish)
</li><li>When this migrate runs, it tries to apply our migrations, which tries to record that a migration has been applied (see django/db/migrations/executor.py, apply_migration, which has several calls to self.recorder.record_applied). 
</li><li>The first thing that record_applied does is a call to self.ensure_schema() (see django/db/migrations/recorder.py, record_applied, lien 66-ish). 
</li><li>ensure_schema checks to see if the Migration model is in the tables in the connection. If it does not find the table then it tries to create the table. 
</li></ul><p>
I believe that this is incorrect behaviour when a db_router has been provided. If using the router above, my expectation would be that the table is not created on any connection other than the 'default' connection. Looking at the other methods on the MigrationRecorder, I would expect that there will be similar issues with applied_migrations and record_unapplied.<br />
</p>

    </div>
  </div>
</div>
          

        <div>
          <div style="position: relative">
            <form id="prefs" method="get" action="/prefs" style="position: absolute; right: 0">
              <div id="trac-comments-order">
                <input type="radio" id="trac-comments-oldest" name="trac-comments-order" value="oldest" checked="checked" />
                <label for="trac-comments-oldest">Oldest first</label>
                <input type="radio" id="trac-comments-newest" name="trac-comments-order" value="newest" />
                <label for="trac-comments-newest">Newest first</label>
                <span id="trac-threaded-toggle" style="display: none">
                  <input type="radio" id="trac-comments-threaded" name="trac-comments-order" value="threaded" />
                  <label for="trac-comments-threaded">Threaded</label>
                </span>
              </div>
              <div>
                <input id="trac-comments-only-toggle" type="checkbox" />
                <label for="trac-comments-only-toggle">Comments only</label>
              </div>
            </form>
          </div>
          <h3 class="foldable">Change History <span class="trac-count">(14)</span></h3>
          <div id="changelog">
              <div class="change" id="trac-change-1-1407823984893840">
                
  <h3 class="change">
    <span class="threading">
      <span id="comment:1" class="cnum">
    <a href="#comment:1">comment:1</a>
  </span>
    </span>
        Changed <a class="timeline" href="/timeline?from=2014-08-12T01%3A13%3A04-05%3A00&amp;precision=second" title="See timeline at 08/12/14 01:13:04">19 months ago</a> by jarshwah
  </h3>
  <div class="trac-ticket-buttons">
  </div>
  <ul class="changes">
    <li class="trac-field-needs_docs">
      <strong class="trac-field-needs_docs">Needs documentation</strong>
        unset
    </li><li class="trac-field-needs_tests">
      <strong class="trac-field-needs_tests">Needs tests</strong>
        unset
    </li><li class="trac-field-needs_better_patch">
      <strong class="trac-field-needs_better_patch">Patch needs improvement</strong>
        unset
    </li>
  </ul>
    <div class="comment searchable">
      <p>
I don't think you've implemented your router correctly, but I'd need to check the router code to see if it's called multiple times (num_dbs*num_models) to be sure. This is how we implement our routers for allow_migrate:<br />
</p>
<pre class="wiki">def allow_migrate(self, db, model):
        if db == 'other':
            return model._meta.app_label == 'legacy_app' # allow migration for new django models implemented in legacy db
        elif model._meta.app_label == 'legacy_app':  # do not allow migration for legacy on any other db
            return False
        return None # this router not responsible
</pre><p>
So, I'm not sure if there is a bug or not (I'll let someone more familiar answer that), but this is what works for us.<br />
</p>

    </div>

              </div>
              <div class="change" id="trac-change-2-1407825951809383">
                
  <h3 class="change">
    <span class="threading">
      <span id="comment:2" class="cnum">
    <a href="#comment:2">comment:2</a>
  </span>
    </span>
        Changed <a class="timeline" href="/timeline?from=2014-08-12T01%3A45%3A51-05%3A00&amp;precision=second" title="See timeline at 08/12/14 01:45:51">19 months ago</a> by akaariai
  </h3>
  <div class="trac-ticket-buttons">
  </div>
    <div class="comment searchable">
      <p>
<a class="closed ticket" href="/ticket/22583" title="New feature: Allow per-database migrations in multidb configurations (closed: fixed)">#22583</a> is somewhat related. It deals with the inability to skip RunSQL/RunPython operations on given database.<br />
</p>

    </div>

              </div>
              <div class="change" id="trac-change-3-1408052517848476">
                
  <h3 class="change">
    <span class="threading">
      <span id="comment:3" class="cnum">
    <a href="#comment:3">comment:3</a>
  </span>
    </span>
        Changed <a class="timeline" href="/timeline?from=2014-08-14T16%3A41%3A57-05%3A00&amp;precision=second" title="See timeline at 08/14/14 16:41:57">19 months ago</a> by froomzy
  </h3>
  <div class="trac-ticket-buttons">
  </div>
    <div class="comment searchable">
      <p>
@jarshwah: I don't think it is the router. Mainly because the router is not called at this point. Which is what I believe is the bug.<br />
</p>
<p>
@akaariai: I agree that there are similarities. Surely I should be able to manage which connections I actually run migrations against. That seems to be what the db_router is trying to do.<br />
</p>
<p>
I thought that something like the following would solve our problem:<br />
</p>
<pre class="wiki">    from django.db import router
	
	.
	.
	.

    def ensure_schema(self):
        """
        Ensures the table exists and has the correct schema.
        """
        # If the table's there, that's fine - we've never changed its schema
        # in the codebase.
        if self.Migration._meta.db_table in self.connection.introspection.get_table_list(self.connection.cursor()):
            return
        # Make the table
	# Change below, similar to how allowed_to_migrate in django/db/migrations/operations/base.py works
	if router.allow_migrate(self.connection, self.Migration):
		with self.connection.schema_editor() as editor:
			editor.create_model(self.Migration)
</pre><p>
                        <br />
But this means that changes to applied_migrations, record_applied, and record_unapplied need to be made, so that it doesn't try to write to a none existent table.<br />
</p>
<p>
For us this is not an urgent issue, as we have appropriate permissions to those connections that are not our core connection. But I do have a concern for any time that we are using a true read-only connection, where we do not have the CREATE TABLE permission. Because this code, as it exists, will blow up in this situation. I tested that with a read-only connection in our db setup, and got an insufficient permissions error.<br />
</p>
<p>
Thanks,<br />
Dylan<br />
</p>

    </div>

              </div>
              <div class="change" id="trac-change-4-1409248576260840">
                
  <h3 class="change">
    <span class="threading">
      <span id="comment:4" class="cnum">
    <a href="#comment:4">comment:4</a>
  </span>
    </span>
        Changed <a class="timeline" href="/timeline?from=2014-08-28T12%3A56%3A16-05%3A00&amp;precision=second" title="See timeline at 08/28/14 12:56:16">19 months ago</a> by andrewgodwin
  </h3>
  <div class="trac-ticket-buttons">
  </div>
  <ul class="changes">
    <li class="trac-field-stage">
      <strong class="trac-field-stage">Triage Stage</strong>
        changed from <em>Unreviewed</em> to <em>Accepted</em>
    </li>
  </ul>
    <div class="comment searchable">
      <p>
This is an issue, but bear in mind that <tt>migrate</tt> must be separately executed for each database alias, so this isn't going to happen unless you specifically run migrate on a database that you know isn't supposed to have migrations on it.<br />
</p>
<p>
I think the best fix would be to have migrations refuse to run entirely and just exit if the migration model is not allowed to be created on the target database.<br />
</p>

    </div>

              </div>
              <div class="change" id="trac-change-5-1409267112983421">
                
  <h3 class="change">
    <span class="threading">
      <span id="comment:5" class="cnum">
    <a href="#comment:5">comment:5</a>
  </span>
    </span>
        Changed <a class="timeline" href="/timeline?from=2014-08-28T18%3A05%3A12-05%3A00&amp;precision=second" title="See timeline at 08/28/14 18:05:12">19 months ago</a> by froomzy
  </h3>
  <div class="trac-ticket-buttons">
  </div>
    <div class="comment searchable">
      <p>
I see what you mean about the needing to run <tt>migarte</tt> for each database. I noticed this with the django test runner, where it is trying to run a migration against every connection alias that we have. So that might be an issue with the test runner as much as with the migrations stuff.<br />
</p>
<p>
Thanks,<br />
Dylan<br />
</p>

    </div>

              </div>
              <div class="change" id="trac-change-6-1409909476590908">
                
  <h3 class="change">
    <span class="threading">
      <span id="comment:6" class="cnum">
    <a href="#comment:6">comment:6</a>
  </span>
    </span>
        Changed <a class="timeline" href="/timeline?from=2014-09-05T04%3A31%3A16-05%3A00&amp;precision=second" title="See timeline at 09/05/14 04:31:16">19 months ago</a> by dperetti
  </h3>
  <div class="trac-ticket-buttons">
  </div>
    <div class="comment searchable">
      <p>
Just stumbled on this issue.<br />
With a properly written router, I expected the migrations of each app to be executed in the right database by just using :<br />
</p>
<pre class="wiki">manage.py migrate
</pre><p>
Could this be the behavior ?<br />
</p>
<p>
Instead it's assuming I'm using the default database, OK, no, but ok :-)... and it doesn't follow the allow_migrate rule and creates in the default database the tables that are supposed to live exclusively in the another one (NOT OK !).<br />
</p>
<p>
So for now the workaround for me is to use a shell script where the app and the database are specified.:<br />
</p>
<pre class="wiki">./manage.py migrate inapppurchase --database=iap
./manage.py migrate myapp --database=default
</pre>
    </div>

              </div>
              <div class="change" id="trac-change-7-1409951463390990">
                
  <h3 class="change">
    <span class="threading">
      <span id="comment:7" class="cnum">
    <a href="#comment:7">comment:7</a>
  </span>
          <span>follow-up:</span>
    <a href="#comment:8" class="follow-up">↓ 8</a>
    </span>
        Changed <a class="timeline" href="/timeline?from=2014-09-05T16%3A11%3A03-05%3A00&amp;precision=second" title="See timeline at 09/05/14 16:11:03">19 months ago</a> by andrewgodwin
  </h3>
  <div class="trac-ticket-buttons">
  </div>
    <div class="comment searchable">
      <p>
dperetti: Just like syncdb, migrate only runs on one database at a time, so you must execute it individually for each database, as you suggest. This is by design.<br />
</p>
<p>
froomzy: Yes, this is likely a test runner issue, that would be doing this kind of migrate-on-everything. I think the suggested fix of refusing to migrate databases where allow_migrate on the migration model returns False will still work, as long as it errors in a way we can catch in the test runner.<br />
</p>

    </div>

              </div>
              <div class="change" id="trac-change-8-1410624071929210">
                
  <h3 class="change">
    <span class="threading">
      <span id="comment:8" class="cnum">
    <a href="#comment:8">comment:8</a>
  </span>
        in reply to:
    <a href="#comment:7">↑ 7</a>
    </span>
        Changed <a class="timeline" href="/timeline?from=2014-09-13T11%3A01%3A11-05%3A00&amp;precision=second" title="See timeline at 09/13/14 11:01:11">18 months ago</a> by dperetti
  </h3>
  <div class="trac-ticket-buttons">
  </div>
    <div class="comment searchable">
      <p>
Replying to <a class="ticket" href="/ticket/23273#comment:7" title="Comment 7">andrewgodwin</a>:<br />
</p>
<blockquote class="citation">
<p>
dperetti: Just like syncdb, migrate only runs on one database at a time, so you must execute it individually for each database, as you suggest. This is by design.<br />
</p>
</blockquote>
<p>
The question is : is it the best design ? When I run <tt>migrate</tt>, I don't want to know about how the router is configured. I just want to migrate the app.<br />
If the router dispatches the tables of an app to different databases, then I want <tt>migrate</tt> to operate on those. <br />
In other words, I think it would make sense to make <tt>migrate</tt> database agnostic.<br />
</p>

    </div>

              </div>
              <div class="change" id="trac-change-9-1410976685691488">
                
  <h3 class="change">
    <span class="threading">
      <span id="comment:9" class="cnum">
    <a href="#comment:9">comment:9</a>
  </span>
    </span>
        Changed <a class="timeline" href="/timeline?from=2014-09-17T12%3A58%3A05-05%3A00&amp;precision=second" title="See timeline at 09/17/14 12:58:05">18 months ago</a> by dperetti
  </h3>
  <div class="trac-ticket-buttons">
  </div>
    <div class="comment searchable">
      <p>
Another side issue : we cannot just <tt>manage.py migrate someapp</tt> if the someapp is a "django &lt;1.7" app without migration : the old syncdb behavior is not applied when an application is specified.<br />
So if want the old apps to sync, I have to just run <tt>manage.py migrate</tt>, without argument... which will create unwanted tables when we have multiple databases.<br />
</p>

    </div>

              </div>
              <div class="change" id="trac-change-10-1418939121535487">
                
  <h3 class="change">
    <span class="threading">
      <span id="comment:10" class="cnum">
    <a href="#comment:10">comment:10</a>
  </span>
    </span>
        Changed <a class="timeline" href="/timeline?from=2014-12-18T15%3A45%3A21-06%3A00&amp;precision=second" title="See timeline at 12/18/14 15:45:21">15 months ago</a> by timgraham
  </h3>
  <div class="trac-ticket-buttons">
  </div>
  <ul class="changes">
    <li class="trac-field-version">
      <strong class="trac-field-version">Version</strong>
        changed from <em>1.7-rc-2</em> to <em>1.7</em>
    </li>
  </ul>

              </div>
              <div class="change" id="trac-change-11-1422390200861476">
                
  <h3 class="change">
    <span class="threading">
      <span id="comment:11" class="cnum">
    <a href="#comment:11">comment:11</a>
  </span>
    </span>
        Changed <a class="timeline" href="/timeline?from=2015-01-27T14%3A23%3A20-06%3A00&amp;precision=second" title="See timeline at 01/27/15 14:23:20">14 months ago</a> by froomzy
  </h3>
  <div class="trac-ticket-buttons">
  </div>
    <div class="comment searchable">
      <p>
Hi guys,<br />
</p>
<p>
Just wondering if there is any chance this will make it into 1.8? Or soon there after?<br />
</p>
<p>
Thanks,<br />
Dylan<br />
</p>

    </div>

              </div>
              <div class="change" id="trac-change-12-1422391482465311">
                
  <h3 class="change">
    <span class="threading">
      <span id="comment:12" class="cnum">
    <a href="#comment:12">comment:12</a>
  </span>
    </span>
        Changed <a class="timeline" href="/timeline?from=2015-01-27T14%3A44%3A42-06%3A00&amp;precision=second" title="See timeline at 01/27/15 14:44:42">14 months ago</a> by timgraham
  </h3>
  <div class="trac-ticket-buttons">
  </div>
    <div class="comment searchable">
      <p>
It's not clear to me what fixing this issue involves exactly. Anyway, it doesn't appear anyone is working on it so there's no timetable for its resolution.<br />
</p>

    </div>

              </div>
              <div class="change" id="trac-change-13-1455190785100404">
                
  <h3 class="change">
    <span class="threading">
      <span id="comment:13" class="cnum">
    <a href="#comment:13">comment:13</a>
  </span>
    </span>
        Changed <a class="timeline" href="/timeline?from=2016-02-11T05%3A39%3A45-06%3A00&amp;precision=second" title="See timeline at 02/11/16 05:39:45">5 weeks ago</a> by marfire
  </h3>
  <div class="trac-ticket-buttons">
  </div>
  <ul class="changes">
    <li class="trac-field-cc">
      <strong class="trac-field-cc">Cc</strong>
        <em>k@…</em> added
    </li><li class="trac-field-version">
      <strong class="trac-field-version">Version</strong>
        changed from <em>1.7</em> to <em>master</em>
    </li>
  </ul>
    <div class="comment searchable">
      <p>
I wanted to chime in here to broaden the scope of the bug, as I was affected by it recently in a different context.<br />
</p>
<p>
The bigger issue is not just that the framework tries to create the migrations table where it's not needed, but that it marks as applied migrations that in fact were not. That puts the database in an inconsistent state, at least as far as migrations are concerned. It's a harmless inconsistency for the specific settings file used at that specific moment in time, but it lays the seed for big problems down the line. For example, if you later decide to change your routing scheme, or (as happened in my case) if you have multiple projects with different settings using the same app on the same database.<br />
</p>
<p>
In terms of a solution, what seems straightforward to my untrained eye is for the migration framework to simply not record migrations as applied that it didn't apply (and as a corollary, it shouldn't try to create the migration table on a database if it doesn't need to record any migrations there). The fix suggested above ("to have migrations refuse to run entirely and just exit if the migration model is not allowed to be created on the target database") doesn't address the broader issue.<br />
</p>

    </div>

              </div>
              <div class="change" id="trac-change-14-1455193814224900">
                
  <h3 class="change">
    <span class="threading">
      <span id="comment:14" class="cnum">
    <a href="#comment:14">comment:14</a>
  </span>
    </span>
        Changed <a class="timeline" href="/timeline?from=2016-02-11T06%3A30%3A14-06%3A00&amp;precision=second" title="See timeline at 02/11/16 06:30:14">5 weeks ago</a> by marfire
  </h3>
  <div class="trac-ticket-buttons">
  </div>
    <div class="comment searchable">
      <p>
Let me amend my last comment: I think that having <tt>migrate</tt> blow up in this situation would in fact solve the problem with having an inconsistent migrations table, which is the most important thing. <br />
</p>
<p>
My question is, since <tt>allow_migrate()</tt> operates at the model level and the <tt>migrate</tt> command operates at the app level, wouldn't this make it impossible to migrate some models of an app but not others?<br />
</p>

    </div>

              </div>
          </div>
        </div>
      <div id="help"><strong>Note:</strong> See
        <a href="/wiki/TracTickets">TracTickets</a> for help on using
        tickets.</div>
    </div>
    <div id="altlinks">
      <h3>Download in other formats:</h3>
      <ul>
        <li class="first">
          <a rel="nofollow" href="/ticket/23273?format=csv" class="csv">Comma-delimited Text</a>
        </li><li>
          <a rel="nofollow" href="/ticket/23273?format=tab" class="tab">Tab-delimited Text</a>
        </li><li class="last">
          <a rel="nofollow" href="/ticket/23273?format=rss" class="rss">RSS Feed</a>
        </li>
      </ul>
    </div>
    </div>
          <a href="#top" class="backtotop"><i class="icon icon-chevron-up"></i> Back to Top</a>
        </div>
      </div>
    <div role="contentinfo">
      <div class="subfooter">
        <div class="container">
          <h1 class="visuallyhidden">Django Links</h1>
          <div class="col learn">
            <h2>Learn More</h2>
            <ul>
              <li><a href="https://www.djangoproject.com/overview/">About Django</a></li>
              <li><a href="https://www.djangoproject.com/start/">Getting Started with Django</a></li>
              <li><a href="https://www.djangoproject.com/foundation/">Django Software Foundation</a></li>
              <li><a href="https://www.djangoproject.com/conduct/">Code of Conduct</a></li>
            </ul>
          </div>
          <div class="col involved">
            <h2>Get Involved</h2>
            <ul>
              <li><a href="https://www.djangoproject.com/community/">Join a Group</a></li>
              <li><a href="https://docs.djangoproject.com/en/dev/internals/contributing/">Contribute to Django</a></li>
              <li><a href="https://docs.djangoproject.com/en/dev/internals/contributing/bugs-and-features/#reporting-security-issues">Submit a Bug</a></li>
              <li><a href="https://docs.djangoproject.com/en/dev/internals/security/">Report a Security Issue</a></li>
            </ul>
          </div>
          <div class="col follow">
            <h2>Follow Us</h2>
            <ul>
              <li><a href="http://github.com/django">GitHub</a></li>
              <li><a href="https://twitter.com/djangoproject">Twitter</a></li>
              <li><a href="https://www.djangoproject.com/rss/weblog/">News RSS</a></li>
              <li><a href="https://groups.google.com/forum/#!forum/django-users">Django Users Mailing List</a></li>
            </ul>
          </div>
        </div>
      </div>
      <div class="footer">
        <div class="container">
          <div class="footer-logo">
            <a class="logo" href="https://djangoproject.com/">Django</a>
          </div>
          <ul class="thanks">
            <li><span>Hosting by</span> <a class="rackspace" href="http://rackspace.com">Rackspace</a></li>
            <li class="design"><span>Design by</span> <a class="threespot" href="http://www.threespot.com">Threespot</a> <span class="ampersand">&amp;</span> <a class="andrevv" href="http://andrevv.com/"></a></li>
          </ul>
          <p class="copyright">© 2005-2016
              <a href="https://djangoproject.com/foundation/"> Django Software
              Foundation</a> unless otherwise noted. Django is a
              <a href="https://djangoproject.com/trademarks/">registered
              trademark</a> of the Django Software Foundation.
          </p>
        </div>
      </div>
    </div>
  <script data-main="/chrome/site/js/main.js" src="/chrome/site/js/lib/require.js"></script>
  </body>
</html>